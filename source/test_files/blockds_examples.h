#include <nds.h>
#include <stdio.h>
#include <errno.h>
#include <dlfcn.h>
#include <filesystem.h>
#include <fat.h>
#include <gl2d.h>

// This file contains pointers to the data: `forest_townTiles`, `forest_townMap`
// and `forest_townPal`. It also contains the size of everything:
// `forest_townTilesLen`, etc.
#include "../graphics/forest_town.h"

// Headers autogenerated for each PNG file inside GFXDIRS in the Makefile
#include "../graphics/ball.h"
#include "../graphics/city.h"
#include "../graphics/neon.h"

#include "../data/teapot_bin.h"

#include "../graphics/tiny_16.h"
#include "../graphics/advnt.h"

#define MAP_WIDTH 30
#define MAP_HEIGHT 20

class BlockDSExamples
{
public:
    void InputTests();
    void BGScroll2D();
    void LayerMovement();
    void Object3D();
    void TilesetBG();
    void TilesetSprite();

private:
    void wait_forever(void)
    {
        while (1)
            swiWaitForVBlank();
    }

    const int16_t map[MAP_WIDTH * MAP_HEIGHT] = {
        94, 95, 84, 85, 94, 95, 84, 85, 94, 95, 1, 1, 1, 1, 1, 1, 1, 1, 94, 95, 84,
        85, 84, 85, 94, 95, 84, 85, 84, 85, 84, 85, 94, 95, 84, 85, 94, 95, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 94, 95, 94, 95, 84, 85, 94, 95, 94, 95, 94, 95,
        84, 85, 94, 95, 1, 0, 1, 1, 1, 1, 1, 1, 7, 7, 7, 1, 0, 1, 1, 1, 1, 1, 94,
        95, 84, 85, 84, 85, 1, 1, 94, 95, 1, 1, 1, 7, 1, 1, 1, 1, 1, 1, 1, 0, 2, 1,
        1, 1, 1, 1, 1, 1, 7, 7, 94, 95, 94, 95, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 7,
        1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 84, 85, 1, 1, 7, 0, 1, 1, 1,
        1, 1, 1, 7, 2, 1, 1, 1, 7, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 94, 95, 1, 7,
        7, 7, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 47, 48, 48, 48, 49, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 84, 0, 17, 18, 18, 18, 18, 18, 18, 19, 1, 1, 1, 1, 1, 1, 57, 58,
        58, 58, 59, 1, 1, 1, 1, 0, 1, 1, 1, 1, 94, 0, 27, 1, 1, 1, 1, 1, 1, 29, 1,
        1, 1, 1, 1, 7, 67, 68, 68, 68, 69, 1, 1, 7, 7, 2, 1, 7, 1, 84, 85, 7, 27, 1,
        1, 1, 1, 1, 1, 29, 1, 1, 1, 1, 1, 1, 87, 97, 98, 99, 89, 1, 1, 0, 7, 7, 0,
        0, 1, 94, 95, 7, 27, 1, 1, 1, 1, 1, 1, 29, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 0, 1, 1, 1, 84, 85, 84, 0, 27, 1, 1, 1, 1, 1, 1, 29, 7, 0, 1, 1, 1,
        1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 94, 95, 94, 7, 27, 1, 1, 1, 1, 1, 1,
        29, 2, 7, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 84, 85, 1, 37,
        38, 38, 38, 38, 28, 38, 39, 7, 7, 1, 1, 1, 1, 20, 21, 21, 21, 21, 21, 21,
        21, 22, 1, 1, 1, 1, 94, 95, 7, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 7, 1, 1, 1, 30,
        31, 31, 31, 31, 31, 31, 31, 32, 1, 1, 1, 1, 84, 85, 0, 7, 1, 1, 1, 1, 0, 1,
        1, 1, 1, 1, 1, 1, 20, 44, 31, 31, 31, 31, 31, 31, 31, 43, 22, 1, 2, 1, 94,
        95, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 30, 31, 31, 31, 31, 31, 31,
        31, 31, 31, 32, 1, 7, 1, 1, 84, 1, 1, 1, 1, 1, 1, 1, 1, 7, 1, 1, 1, 1, 20,
        44, 31, 31, 31, 31, 31, 31, 31, 31, 31, 32, 1, 1, 1, 1, 94, 1, 1, 1, 0, 1,
        1, 1, 1, 1, 1, 0, 1, 1, 30, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 43, 22,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 20, 44, 31, 31, 31, 31, 31,
        31, 31, 31, 31, 31, 31, 32, 1, 1, 1, 1};

    glImage tileset[10 * 10];
    const uint32_t screen_width = 256;
    const uint32_t screen_height = 192;

    glImage character[6];
};